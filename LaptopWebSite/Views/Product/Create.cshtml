@model LaptopWebSite.ViewModels.ProductAddViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ProductViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAvailable)
                @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @id = "textEditor", @class = "form-control html-editor-autoinit" } })
            @*<div id="textEditor" class="html-editor-autoinit">

            </div>*@
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="hidden" id="divImage">

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section styles{
    @Styles.Render("~/Content/froala");
}

@section scripts {
    @Scripts.Render("~/bundles/froala");
    <script>
        $(function () {
            $('.html-editor-autoinit').froalaEditor(
                {
                    imageUploadURL: '/Product/UploadImageDescription',
                    imageMaxSize: 2 * 1024 * 1024
                }
            )
                .on('froalaEditor.image.uploaded', function (e, editor, response) {
                    var $divImage = $("#divImage");
                    var data = JSON.parse(response);
                    var hidden = "<input type='hidden' id='DescriptionImages' name='DescriptionImages' value='" + data.filename + "'/> ";
                    console.log(data.filename);
                    $divImage.append(hidden);
                    console.log(response);
                })
                .on('froalaEditor.image.error', function (e, editor, error, response) {
                    if (error.code == 5) {
                        alert("Size image < 2mb")
                        return false;
                    }
                })
                .on('froalaEditor.image.removed', function (e, editor, $img) {
                    $.ajax({
                        method: "POST",
                        url: "/Product/DeleteImageDecription",
                        data: {
                            src: $img.attr('src')
                        }
                    }).done(function (data) {
                        
                        $("#divImage : input[value='" + data.filename + "']").filter().remove();
                        console.log(data);
                    });
                });
        })
    </script>
}